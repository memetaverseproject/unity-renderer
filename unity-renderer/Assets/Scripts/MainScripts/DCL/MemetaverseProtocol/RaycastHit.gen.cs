// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: memetaverse/sdk/components/common/raycast_hit.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DCL.ECSComponents {

  /// <summary>Holder for reflection information generated from memetaverse/sdk/components/common/raycast_hit.proto</summary>
  public static partial class RaycastHitReflection {

    #region Descriptor
    /// <summary>File descriptor for memetaverse/sdk/components/common/raycast_hit.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RaycastHitReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjNtZW1ldGF2ZXJzZS9zZGsvY29tcG9uZW50cy9jb21tb24vcmF5Y2FzdF9o",
            "aXQucHJvdG8SIW1lbWV0YXZlcnNlLnNkay5jb21wb25lbnRzLmNvbW1vbhog",
            "bWVtZXRhdmVyc2UvY29tbW9uL3ZlY3RvcnMucHJvdG8irAIKClJheWNhc3RI",
            "aXQSLQoIcG9zaXRpb24YASABKAsyGy5tZW1ldGF2ZXJzZS5jb21tb24uVmVj",
            "dG9yMxIyCg1nbG9iYWxfb3JpZ2luGAIgASgLMhsubWVtZXRhdmVyc2UuY29t",
            "bW9uLlZlY3RvcjMSLgoJZGlyZWN0aW9uGAMgASgLMhsubWVtZXRhdmVyc2Uu",
            "Y29tbW9uLlZlY3RvcjMSLwoKbm9ybWFsX2hpdBgEIAEoCzIbLm1lbWV0YXZl",
            "cnNlLmNvbW1vbi5WZWN0b3IzEg4KBmxlbmd0aBgFIAEoAhIWCgltZXNoX25h",
            "bWUYBiABKAlIAIgBARIWCgllbnRpdHlfaWQYByABKA1IAYgBAUIMCgpfbWVz",
            "aF9uYW1lQgwKCl9lbnRpdHlfaWRCFKoCEURDTC5FQ1NDb21wb25lbnRzYgZw",
            "cm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Memetaverse.Common.VectorsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DCL.ECSComponents.RaycastHit), global::DCL.ECSComponents.RaycastHit.Parser, new[]{ "Position", "GlobalOrigin", "Direction", "NormalHit", "Length", "MeshName", "EntityId" }, new[]{ "MeshName", "EntityId" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// RaycastHit contains information about the intersection of a ray with a mesh.
  /// </summary>
  public sealed partial class RaycastHit : pb::IMessage<RaycastHit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RaycastHit> _parser = new pb::MessageParser<RaycastHit>(() => new RaycastHit());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RaycastHit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DCL.ECSComponents.RaycastHitReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaycastHit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaycastHit(RaycastHit other) : this() {
      _hasBits0 = other._hasBits0;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      globalOrigin_ = other.globalOrigin_ != null ? other.globalOrigin_.Clone() : null;
      direction_ = other.direction_ != null ? other.direction_.Clone() : null;
      normalHit_ = other.normalHit_ != null ? other.normalHit_.Clone() : null;
      length_ = other.length_;
      meshName_ = other.meshName_;
      entityId_ = other.entityId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RaycastHit Clone() {
      return new RaycastHit(this);
    }

    /// <summary>Field number for the "position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::Memetaverse.Common.Vector3 position_;
    /// <summary>
    /// Position will be relative to the scene
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Memetaverse.Common.Vector3 Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "global_origin" field.</summary>
    public const int GlobalOriginFieldNumber = 2;
    private global::Memetaverse.Common.Vector3 globalOrigin_;
    /// <summary>
    /// the starting point of the ray in global coordinates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Memetaverse.Common.Vector3 GlobalOrigin {
      get { return globalOrigin_; }
      set {
        globalOrigin_ = value;
      }
    }

    /// <summary>Field number for the "direction" field.</summary>
    public const int DirectionFieldNumber = 3;
    private global::Memetaverse.Common.Vector3 direction_;
    /// <summary>
    /// the direction vector of the ray in global coordinates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Memetaverse.Common.Vector3 Direction {
      get { return direction_; }
      set {
        direction_ = value;
      }
    }

    /// <summary>Field number for the "normal_hit" field.</summary>
    public const int NormalHitFieldNumber = 4;
    private global::Memetaverse.Common.Vector3 normalHit_;
    /// <summary>
    /// normal of the hit surface in global coordinates
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::Memetaverse.Common.Vector3 NormalHit {
      get { return normalHit_; }
      set {
        normalHit_ = value;
      }
    }

    /// <summary>Field number for the "length" field.</summary>
    public const int LengthFieldNumber = 5;
    private float length_;
    /// <summary>
    /// the distance between the ray origin and the hit position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "mesh_name" field.</summary>
    public const int MeshNameFieldNumber = 6;
    private string meshName_;
    /// <summary>
    /// mesh name, if collision happened inside a GltfContainer
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string MeshName {
      get { return meshName_ ?? ""; }
      set {
        meshName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }
    /// <summary>Gets whether the "mesh_name" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasMeshName {
      get { return meshName_ != null; }
    }
    /// <summary>Clears the value of the "mesh_name" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMeshName() {
      meshName_ = null;
    }

    /// <summary>Field number for the "entity_id" field.</summary>
    public const int EntityIdFieldNumber = 7;
    private uint entityId_;
    /// <summary>
    /// the ID of the Entity that has the impacted mesh attached
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint EntityId {
      get { if ((_hasBits0 & 1) != 0) { return entityId_; } else { return 0; } }
      set {
        _hasBits0 |= 1;
        entityId_ = value;
      }
    }
    /// <summary>Gets whether the "entity_id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasEntityId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "entity_id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearEntityId() {
      _hasBits0 &= ~1;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RaycastHit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RaycastHit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(GlobalOrigin, other.GlobalOrigin)) return false;
      if (!object.Equals(Direction, other.Direction)) return false;
      if (!object.Equals(NormalHit, other.NormalHit)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Length, other.Length)) return false;
      if (MeshName != other.MeshName) return false;
      if (EntityId != other.EntityId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      if (globalOrigin_ != null) hash ^= GlobalOrigin.GetHashCode();
      if (direction_ != null) hash ^= Direction.GetHashCode();
      if (normalHit_ != null) hash ^= NormalHit.GetHashCode();
      if (Length != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Length);
      if (HasMeshName) hash ^= MeshName.GetHashCode();
      if (HasEntityId) hash ^= EntityId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (globalOrigin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GlobalOrigin);
      }
      if (direction_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Direction);
      }
      if (normalHit_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NormalHit);
      }
      if (Length != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Length);
      }
      if (HasMeshName) {
        output.WriteRawTag(50);
        output.WriteString(MeshName);
      }
      if (HasEntityId) {
        output.WriteRawTag(56);
        output.WriteUInt32(EntityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      if (globalOrigin_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(GlobalOrigin);
      }
      if (direction_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Direction);
      }
      if (normalHit_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(NormalHit);
      }
      if (Length != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(Length);
      }
      if (HasMeshName) {
        output.WriteRawTag(50);
        output.WriteString(MeshName);
      }
      if (HasEntityId) {
        output.WriteRawTag(56);
        output.WriteUInt32(EntityId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (globalOrigin_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GlobalOrigin);
      }
      if (direction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Direction);
      }
      if (normalHit_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(NormalHit);
      }
      if (Length != 0F) {
        size += 1 + 4;
      }
      if (HasMeshName) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MeshName);
      }
      if (HasEntityId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(EntityId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RaycastHit other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::Memetaverse.Common.Vector3();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.globalOrigin_ != null) {
        if (globalOrigin_ == null) {
          GlobalOrigin = new global::Memetaverse.Common.Vector3();
        }
        GlobalOrigin.MergeFrom(other.GlobalOrigin);
      }
      if (other.direction_ != null) {
        if (direction_ == null) {
          Direction = new global::Memetaverse.Common.Vector3();
        }
        Direction.MergeFrom(other.Direction);
      }
      if (other.normalHit_ != null) {
        if (normalHit_ == null) {
          NormalHit = new global::Memetaverse.Common.Vector3();
        }
        NormalHit.MergeFrom(other.NormalHit);
      }
      if (other.Length != 0F) {
        Length = other.Length;
      }
      if (other.HasMeshName) {
        MeshName = other.MeshName;
      }
      if (other.HasEntityId) {
        EntityId = other.EntityId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Memetaverse.Common.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            if (globalOrigin_ == null) {
              GlobalOrigin = new global::Memetaverse.Common.Vector3();
            }
            input.ReadMessage(GlobalOrigin);
            break;
          }
          case 26: {
            if (direction_ == null) {
              Direction = new global::Memetaverse.Common.Vector3();
            }
            input.ReadMessage(Direction);
            break;
          }
          case 34: {
            if (normalHit_ == null) {
              NormalHit = new global::Memetaverse.Common.Vector3();
            }
            input.ReadMessage(NormalHit);
            break;
          }
          case 45: {
            Length = input.ReadFloat();
            break;
          }
          case 50: {
            MeshName = input.ReadString();
            break;
          }
          case 56: {
            EntityId = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::Memetaverse.Common.Vector3();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            if (globalOrigin_ == null) {
              GlobalOrigin = new global::Memetaverse.Common.Vector3();
            }
            input.ReadMessage(GlobalOrigin);
            break;
          }
          case 26: {
            if (direction_ == null) {
              Direction = new global::Memetaverse.Common.Vector3();
            }
            input.ReadMessage(Direction);
            break;
          }
          case 34: {
            if (normalHit_ == null) {
              NormalHit = new global::Memetaverse.Common.Vector3();
            }
            input.ReadMessage(NormalHit);
            break;
          }
          case 45: {
            Length = input.ReadFloat();
            break;
          }
          case 50: {
            MeshName = input.ReadString();
            break;
          }
          case 56: {
            EntityId = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
