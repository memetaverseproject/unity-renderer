// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: memetaverse/sdk/components/material.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace DCL.ECSComponents {

  /// <summary>Holder for reflection information generated from memetaverse/sdk/components/material.proto</summary>
  public static partial class MaterialReflection {

    #region Descriptor
    /// <summary>File descriptor for memetaverse/sdk/components/material.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static MaterialReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiltZW1ldGF2ZXJzZS9zZGsvY29tcG9uZW50cy9tYXRlcmlhbC5wcm90bxIa",
            "bWVtZXRhdmVyc2Uuc2RrLmNvbXBvbmVudHMaH21lbWV0YXZlcnNlL2NvbW1v",
            "bi9jb2xvcnMucHJvdG8aIG1lbWV0YXZlcnNlL2NvbW1vbi90ZXh0dXJlLnBy",
            "b3RvIvoKCgpQQk1hdGVyaWFsEkUKBXVubGl0GAEgASgLMjQubWVtZXRhdmVy",
            "c2Uuc2RrLmNvbXBvbmVudHMuUEJNYXRlcmlhbC5VbmxpdE1hdGVyaWFsSAAS",
            "QQoDcGJyGAIgASgLMjIubWVtZXRhdmVyc2Uuc2RrLmNvbXBvbmVudHMuUEJN",
            "YXRlcmlhbC5QYnJNYXRlcmlhbEgAGvEBCg1VbmxpdE1hdGVyaWFsEjYKB3Rl",
            "eHR1cmUYASABKAsyIC5tZW1ldGF2ZXJzZS5jb21tb24uVGV4dHVyZVVuaW9u",
            "SACIAQESFwoKYWxwaGFfdGVzdBgCIAEoAkgBiAEBEhkKDGNhc3Rfc2hhZG93",
            "cxgDIAEoCEgCiAEBEjYKDWRpZmZ1c2VfY29sb3IYBCABKAsyGi5tZW1ldGF2",
            "ZXJzZS5jb21tb24uQ29sb3I0SAOIAQFCCgoIX3RleHR1cmVCDQoLX2FscGhh",
            "X3Rlc3RCDwoNX2Nhc3Rfc2hhZG93c0IQCg5fZGlmZnVzZV9jb2xvchrhBwoL",
            "UGJyTWF0ZXJpYWwSNgoHdGV4dHVyZRgBIAEoCzIgLm1lbWV0YXZlcnNlLmNv",
            "bW1vbi5UZXh0dXJlVW5pb25IAIgBARIXCgphbHBoYV90ZXN0GAIgASgCSAGI",
            "AQESGQoMY2FzdF9zaGFkb3dzGAMgASgISAKIAQESPAoNYWxwaGFfdGV4dHVy",
            "ZRgEIAEoCzIgLm1lbWV0YXZlcnNlLmNvbW1vbi5UZXh0dXJlVW5pb25IA4gB",
            "ARI/ChBlbWlzc2l2ZV90ZXh0dXJlGAUgASgLMiAubWVtZXRhdmVyc2UuY29t",
            "bW9uLlRleHR1cmVVbmlvbkgEiAEBEjsKDGJ1bXBfdGV4dHVyZRgGIAEoCzIg",
            "Lm1lbWV0YXZlcnNlLmNvbW1vbi5UZXh0dXJlVW5pb25IBYgBARI1CgxhbGJl",
            "ZG9fY29sb3IYByABKAsyGi5tZW1ldGF2ZXJzZS5jb21tb24uQ29sb3I0SAaI",
            "AQESNwoOZW1pc3NpdmVfY29sb3IYCCABKAsyGi5tZW1ldGF2ZXJzZS5jb21t",
            "b24uQ29sb3IzSAeIAQESOwoScmVmbGVjdGl2aXR5X2NvbG9yGAkgASgLMhou",
            "bWVtZXRhdmVyc2UuY29tbW9uLkNvbG9yM0gIiAEBElQKEXRyYW5zcGFyZW5j",
            "eV9tb2RlGAogASgOMjQubWVtZXRhdmVyc2Uuc2RrLmNvbXBvbmVudHMuTWF0",
            "ZXJpYWxUcmFuc3BhcmVuY3lNb2RlSAmIAQESFQoIbWV0YWxsaWMYCyABKAJI",
            "CogBARIWCglyb3VnaG5lc3MYDCABKAJIC4gBARIfChJzcGVjdWxhcl9pbnRl",
            "bnNpdHkYDiABKAJIDIgBARIfChJlbWlzc2l2ZV9pbnRlbnNpdHkYDyABKAJI",
            "DYgBARIdChBkaXJlY3RfaW50ZW5zaXR5GBAgASgCSA6IAQFCCgoIX3RleHR1",
            "cmVCDQoLX2FscGhhX3Rlc3RCDwoNX2Nhc3Rfc2hhZG93c0IQCg5fYWxwaGFf",
            "dGV4dHVyZUITChFfZW1pc3NpdmVfdGV4dHVyZUIPCg1fYnVtcF90ZXh0dXJl",
            "Qg8KDV9hbGJlZG9fY29sb3JCEQoPX2VtaXNzaXZlX2NvbG9yQhUKE19yZWZs",
            "ZWN0aXZpdHlfY29sb3JCFAoSX3RyYW5zcGFyZW5jeV9tb2RlQgsKCV9tZXRh",
            "bGxpY0IMCgpfcm91Z2huZXNzQhUKE19zcGVjdWxhcl9pbnRlbnNpdHlCFQoT",
            "X2VtaXNzaXZlX2ludGVuc2l0eUITChFfZGlyZWN0X2ludGVuc2l0eUoECA0Q",
            "DkIKCghtYXRlcmlhbCqFAQoYTWF0ZXJpYWxUcmFuc3BhcmVuY3lNb2RlEg4K",
            "Ck1UTV9PUEFRVUUQABISCg5NVE1fQUxQSEFfVEVTVBABEhMKD01UTV9BTFBI",
            "QV9CTEVORBACEiIKHk1UTV9BTFBIQV9URVNUX0FORF9BTFBIQV9CTEVORBAD",
            "EgwKCE1UTV9BVVRPEARCFKoCEURDTC5FQ1NDb21wb25lbnRzYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Memetaverse.Common.ColorsReflection.Descriptor, global::Memetaverse.Common.TextureReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::DCL.ECSComponents.MaterialTransparencyMode), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::DCL.ECSComponents.PBMaterial), global::DCL.ECSComponents.PBMaterial.Parser, new[]{ "Unlit", "Pbr" }, new[]{ "Material" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::DCL.ECSComponents.PBMaterial.Types.UnlitMaterial), global::DCL.ECSComponents.PBMaterial.Types.UnlitMaterial.Parser, new[]{ "Texture", "AlphaTest", "CastShadows", "DiffuseColor" }, new[]{ "Texture", "AlphaTest", "CastShadows", "DiffuseColor" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::DCL.ECSComponents.PBMaterial.Types.PbrMaterial), global::DCL.ECSComponents.PBMaterial.Types.PbrMaterial.Parser, new[]{ "Texture", "AlphaTest", "CastShadows", "AlphaTexture", "EmissiveTexture", "BumpTexture", "AlbedoColor", "EmissiveColor", "ReflectivityColor", "TransparencyMode", "Metallic", "Roughness", "SpecularIntensity", "EmissiveIntensity", "DirectIntensity" }, new[]{ "Texture", "AlphaTest", "CastShadows", "AlphaTexture", "EmissiveTexture", "BumpTexture", "AlbedoColor", "EmissiveColor", "ReflectivityColor", "TransparencyMode", "Metallic", "Roughness", "SpecularIntensity", "EmissiveIntensity", "DirectIntensity" }, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  public enum MaterialTransparencyMode {
    [pbr::OriginalName("MTM_OPAQUE")] MtmOpaque = 0,
    [pbr::OriginalName("MTM_ALPHA_TEST")] MtmAlphaTest = 1,
    [pbr::OriginalName("MTM_ALPHA_BLEND")] MtmAlphaBlend = 2,
    [pbr::OriginalName("MTM_ALPHA_TEST_AND_ALPHA_BLEND")] MtmAlphaTestAndAlphaBlend = 3,
    [pbr::OriginalName("MTM_AUTO")] MtmAuto = 4,
  }

  #endregion

  #region Messages
  public sealed partial class PBMaterial : pb::IMessage<PBMaterial>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<PBMaterial> _parser = new pb::MessageParser<PBMaterial>(() => new PBMaterial());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<PBMaterial> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::DCL.ECSComponents.MaterialReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBMaterial() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBMaterial(PBMaterial other) : this() {
      switch (other.MaterialCase) {
        case MaterialOneofCase.Unlit:
          Unlit = other.Unlit.Clone();
          break;
        case MaterialOneofCase.Pbr:
          Pbr = other.Pbr.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public PBMaterial Clone() {
      return new PBMaterial(this);
    }

    /// <summary>Field number for the "unlit" field.</summary>
    public const int UnlitFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.PBMaterial.Types.UnlitMaterial Unlit {
      get { return materialCase_ == MaterialOneofCase.Unlit ? (global::DCL.ECSComponents.PBMaterial.Types.UnlitMaterial) material_ : null; }
      set {
        material_ = value;
        materialCase_ = value == null ? MaterialOneofCase.None : MaterialOneofCase.Unlit;
      }
    }

    /// <summary>Field number for the "pbr" field.</summary>
    public const int PbrFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::DCL.ECSComponents.PBMaterial.Types.PbrMaterial Pbr {
      get { return materialCase_ == MaterialOneofCase.Pbr ? (global::DCL.ECSComponents.PBMaterial.Types.PbrMaterial) material_ : null; }
      set {
        material_ = value;
        materialCase_ = value == null ? MaterialOneofCase.None : MaterialOneofCase.Pbr;
      }
    }

    private object material_;
    /// <summary>Enum of possible cases for the "material" oneof.</summary>
    public enum MaterialOneofCase {
      None = 0,
      Unlit = 1,
      Pbr = 2,
    }
    private MaterialOneofCase materialCase_ = MaterialOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MaterialOneofCase MaterialCase {
      get { return materialCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearMaterial() {
      materialCase_ = MaterialOneofCase.None;
      material_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as PBMaterial);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(PBMaterial other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Unlit, other.Unlit)) return false;
      if (!object.Equals(Pbr, other.Pbr)) return false;
      if (MaterialCase != other.MaterialCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (materialCase_ == MaterialOneofCase.Unlit) hash ^= Unlit.GetHashCode();
      if (materialCase_ == MaterialOneofCase.Pbr) hash ^= Pbr.GetHashCode();
      hash ^= (int) materialCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (materialCase_ == MaterialOneofCase.Unlit) {
        output.WriteRawTag(10);
        output.WriteMessage(Unlit);
      }
      if (materialCase_ == MaterialOneofCase.Pbr) {
        output.WriteRawTag(18);
        output.WriteMessage(Pbr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (materialCase_ == MaterialOneofCase.Unlit) {
        output.WriteRawTag(10);
        output.WriteMessage(Unlit);
      }
      if (materialCase_ == MaterialOneofCase.Pbr) {
        output.WriteRawTag(18);
        output.WriteMessage(Pbr);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (materialCase_ == MaterialOneofCase.Unlit) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Unlit);
      }
      if (materialCase_ == MaterialOneofCase.Pbr) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Pbr);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(PBMaterial other) {
      if (other == null) {
        return;
      }
      switch (other.MaterialCase) {
        case MaterialOneofCase.Unlit:
          if (Unlit == null) {
            Unlit = new global::DCL.ECSComponents.PBMaterial.Types.UnlitMaterial();
          }
          Unlit.MergeFrom(other.Unlit);
          break;
        case MaterialOneofCase.Pbr:
          if (Pbr == null) {
            Pbr = new global::DCL.ECSComponents.PBMaterial.Types.PbrMaterial();
          }
          Pbr.MergeFrom(other.Pbr);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::DCL.ECSComponents.PBMaterial.Types.UnlitMaterial subBuilder = new global::DCL.ECSComponents.PBMaterial.Types.UnlitMaterial();
            if (materialCase_ == MaterialOneofCase.Unlit) {
              subBuilder.MergeFrom(Unlit);
            }
            input.ReadMessage(subBuilder);
            Unlit = subBuilder;
            break;
          }
          case 18: {
            global::DCL.ECSComponents.PBMaterial.Types.PbrMaterial subBuilder = new global::DCL.ECSComponents.PBMaterial.Types.PbrMaterial();
            if (materialCase_ == MaterialOneofCase.Pbr) {
              subBuilder.MergeFrom(Pbr);
            }
            input.ReadMessage(subBuilder);
            Pbr = subBuilder;
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            global::DCL.ECSComponents.PBMaterial.Types.UnlitMaterial subBuilder = new global::DCL.ECSComponents.PBMaterial.Types.UnlitMaterial();
            if (materialCase_ == MaterialOneofCase.Unlit) {
              subBuilder.MergeFrom(Unlit);
            }
            input.ReadMessage(subBuilder);
            Unlit = subBuilder;
            break;
          }
          case 18: {
            global::DCL.ECSComponents.PBMaterial.Types.PbrMaterial subBuilder = new global::DCL.ECSComponents.PBMaterial.Types.PbrMaterial();
            if (materialCase_ == MaterialOneofCase.Pbr) {
              subBuilder.MergeFrom(Pbr);
            }
            input.ReadMessage(subBuilder);
            Pbr = subBuilder;
            break;
          }
        }
      }
    }
    #endif

    #region Nested types
    /// <summary>Container for nested types declared in the PBMaterial message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static partial class Types {
      public sealed partial class UnlitMaterial : pb::IMessage<UnlitMaterial>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<UnlitMaterial> _parser = new pb::MessageParser<UnlitMaterial>(() => new UnlitMaterial());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<UnlitMaterial> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DCL.ECSComponents.PBMaterial.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UnlitMaterial() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UnlitMaterial(UnlitMaterial other) : this() {
          _hasBits0 = other._hasBits0;
          texture_ = other.texture_ != null ? other.texture_.Clone() : null;
          alphaTest_ = other.alphaTest_;
          castShadows_ = other.castShadows_;
          diffuseColor_ = other.diffuseColor_ != null ? other.diffuseColor_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public UnlitMaterial Clone() {
          return new UnlitMaterial(this);
        }

        /// <summary>Field number for the "texture" field.</summary>
        public const int TextureFieldNumber = 1;
        private global::Memetaverse.Common.TextureUnion texture_;
        /// <summary>
        /// default = null
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Memetaverse.Common.TextureUnion Texture {
          get { return texture_; }
          set {
            texture_ = value;
          }
        }

        /// <summary>Field number for the "alpha_test" field.</summary>
        public const int AlphaTestFieldNumber = 2;
        private float alphaTest_;
        /// <summary>
        /// default = 0.5. range value: from 0 to 1
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float AlphaTest {
          get { if ((_hasBits0 & 1) != 0) { return alphaTest_; } else { return 0F; } }
          set {
            _hasBits0 |= 1;
            alphaTest_ = value;
          }
        }
        /// <summary>Gets whether the "alpha_test" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAlphaTest {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "alpha_test" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAlphaTest() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "cast_shadows" field.</summary>
        public const int CastShadowsFieldNumber = 3;
        private bool castShadows_;
        /// <summary>
        /// default =  true
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool CastShadows {
          get { if ((_hasBits0 & 2) != 0) { return castShadows_; } else { return false; } }
          set {
            _hasBits0 |= 2;
            castShadows_ = value;
          }
        }
        /// <summary>Gets whether the "cast_shadows" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCastShadows {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "cast_shadows" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCastShadows() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "diffuse_color" field.</summary>
        public const int DiffuseColorFieldNumber = 4;
        private global::Memetaverse.Common.Color4 diffuseColor_;
        /// <summary>
        /// default = white;
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Memetaverse.Common.Color4 DiffuseColor {
          get { return diffuseColor_; }
          set {
            diffuseColor_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as UnlitMaterial);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(UnlitMaterial other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Texture, other.Texture)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AlphaTest, other.AlphaTest)) return false;
          if (CastShadows != other.CastShadows) return false;
          if (!object.Equals(DiffuseColor, other.DiffuseColor)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (texture_ != null) hash ^= Texture.GetHashCode();
          if (HasAlphaTest) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AlphaTest);
          if (HasCastShadows) hash ^= CastShadows.GetHashCode();
          if (diffuseColor_ != null) hash ^= DiffuseColor.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (texture_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Texture);
          }
          if (HasAlphaTest) {
            output.WriteRawTag(21);
            output.WriteFloat(AlphaTest);
          }
          if (HasCastShadows) {
            output.WriteRawTag(24);
            output.WriteBool(CastShadows);
          }
          if (diffuseColor_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(DiffuseColor);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (texture_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Texture);
          }
          if (HasAlphaTest) {
            output.WriteRawTag(21);
            output.WriteFloat(AlphaTest);
          }
          if (HasCastShadows) {
            output.WriteRawTag(24);
            output.WriteBool(CastShadows);
          }
          if (diffuseColor_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(DiffuseColor);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (texture_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Texture);
          }
          if (HasAlphaTest) {
            size += 1 + 4;
          }
          if (HasCastShadows) {
            size += 1 + 1;
          }
          if (diffuseColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(DiffuseColor);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(UnlitMaterial other) {
          if (other == null) {
            return;
          }
          if (other.texture_ != null) {
            if (texture_ == null) {
              Texture = new global::Memetaverse.Common.TextureUnion();
            }
            Texture.MergeFrom(other.Texture);
          }
          if (other.HasAlphaTest) {
            AlphaTest = other.AlphaTest;
          }
          if (other.HasCastShadows) {
            CastShadows = other.CastShadows;
          }
          if (other.diffuseColor_ != null) {
            if (diffuseColor_ == null) {
              DiffuseColor = new global::Memetaverse.Common.Color4();
            }
            DiffuseColor.MergeFrom(other.DiffuseColor);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (texture_ == null) {
                  Texture = new global::Memetaverse.Common.TextureUnion();
                }
                input.ReadMessage(Texture);
                break;
              }
              case 21: {
                AlphaTest = input.ReadFloat();
                break;
              }
              case 24: {
                CastShadows = input.ReadBool();
                break;
              }
              case 34: {
                if (diffuseColor_ == null) {
                  DiffuseColor = new global::Memetaverse.Common.Color4();
                }
                input.ReadMessage(DiffuseColor);
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (texture_ == null) {
                  Texture = new global::Memetaverse.Common.TextureUnion();
                }
                input.ReadMessage(Texture);
                break;
              }
              case 21: {
                AlphaTest = input.ReadFloat();
                break;
              }
              case 24: {
                CastShadows = input.ReadBool();
                break;
              }
              case 34: {
                if (diffuseColor_ == null) {
                  DiffuseColor = new global::Memetaverse.Common.Color4();
                }
                input.ReadMessage(DiffuseColor);
                break;
              }
            }
          }
        }
        #endif

      }

      public sealed partial class PbrMaterial : pb::IMessage<PbrMaterial>
      #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          , pb::IBufferMessage
      #endif
      {
        private static readonly pb::MessageParser<PbrMaterial> _parser = new pb::MessageParser<PbrMaterial>(() => new PbrMaterial());
        private pb::UnknownFieldSet _unknownFields;
        private int _hasBits0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pb::MessageParser<PbrMaterial> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::DCL.ECSComponents.PBMaterial.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PbrMaterial() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PbrMaterial(PbrMaterial other) : this() {
          _hasBits0 = other._hasBits0;
          texture_ = other.texture_ != null ? other.texture_.Clone() : null;
          alphaTest_ = other.alphaTest_;
          castShadows_ = other.castShadows_;
          alphaTexture_ = other.alphaTexture_ != null ? other.alphaTexture_.Clone() : null;
          emissiveTexture_ = other.emissiveTexture_ != null ? other.emissiveTexture_.Clone() : null;
          bumpTexture_ = other.bumpTexture_ != null ? other.bumpTexture_.Clone() : null;
          albedoColor_ = other.albedoColor_ != null ? other.albedoColor_.Clone() : null;
          emissiveColor_ = other.emissiveColor_ != null ? other.emissiveColor_.Clone() : null;
          reflectivityColor_ = other.reflectivityColor_ != null ? other.reflectivityColor_.Clone() : null;
          transparencyMode_ = other.transparencyMode_;
          metallic_ = other.metallic_;
          roughness_ = other.roughness_;
          specularIntensity_ = other.specularIntensity_;
          emissiveIntensity_ = other.emissiveIntensity_;
          directIntensity_ = other.directIntensity_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public PbrMaterial Clone() {
          return new PbrMaterial(this);
        }

        /// <summary>Field number for the "texture" field.</summary>
        public const int TextureFieldNumber = 1;
        private global::Memetaverse.Common.TextureUnion texture_;
        /// <summary>
        /// default = null
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Memetaverse.Common.TextureUnion Texture {
          get { return texture_; }
          set {
            texture_ = value;
          }
        }

        /// <summary>Field number for the "alpha_test" field.</summary>
        public const int AlphaTestFieldNumber = 2;
        private float alphaTest_;
        /// <summary>
        /// default = 0.5. range value: from 0 to 1
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float AlphaTest {
          get { if ((_hasBits0 & 1) != 0) { return alphaTest_; } else { return 0F; } }
          set {
            _hasBits0 |= 1;
            alphaTest_ = value;
          }
        }
        /// <summary>Gets whether the "alpha_test" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasAlphaTest {
          get { return (_hasBits0 & 1) != 0; }
        }
        /// <summary>Clears the value of the "alpha_test" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearAlphaTest() {
          _hasBits0 &= ~1;
        }

        /// <summary>Field number for the "cast_shadows" field.</summary>
        public const int CastShadowsFieldNumber = 3;
        private bool castShadows_;
        /// <summary>
        /// default =  true
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool CastShadows {
          get { if ((_hasBits0 & 2) != 0) { return castShadows_; } else { return false; } }
          set {
            _hasBits0 |= 2;
            castShadows_ = value;
          }
        }
        /// <summary>Gets whether the "cast_shadows" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasCastShadows {
          get { return (_hasBits0 & 2) != 0; }
        }
        /// <summary>Clears the value of the "cast_shadows" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearCastShadows() {
          _hasBits0 &= ~2;
        }

        /// <summary>Field number for the "alpha_texture" field.</summary>
        public const int AlphaTextureFieldNumber = 4;
        private global::Memetaverse.Common.TextureUnion alphaTexture_;
        /// <summary>
        /// default = null
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Memetaverse.Common.TextureUnion AlphaTexture {
          get { return alphaTexture_; }
          set {
            alphaTexture_ = value;
          }
        }

        /// <summary>Field number for the "emissive_texture" field.</summary>
        public const int EmissiveTextureFieldNumber = 5;
        private global::Memetaverse.Common.TextureUnion emissiveTexture_;
        /// <summary>
        /// default = null
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Memetaverse.Common.TextureUnion EmissiveTexture {
          get { return emissiveTexture_; }
          set {
            emissiveTexture_ = value;
          }
        }

        /// <summary>Field number for the "bump_texture" field.</summary>
        public const int BumpTextureFieldNumber = 6;
        private global::Memetaverse.Common.TextureUnion bumpTexture_;
        /// <summary>
        /// default = null
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Memetaverse.Common.TextureUnion BumpTexture {
          get { return bumpTexture_; }
          set {
            bumpTexture_ = value;
          }
        }

        /// <summary>Field number for the "albedo_color" field.</summary>
        public const int AlbedoColorFieldNumber = 7;
        private global::Memetaverse.Common.Color4 albedoColor_;
        /// <summary>
        /// default = white;
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Memetaverse.Common.Color4 AlbedoColor {
          get { return albedoColor_; }
          set {
            albedoColor_ = value;
          }
        }

        /// <summary>Field number for the "emissive_color" field.</summary>
        public const int EmissiveColorFieldNumber = 8;
        private global::Memetaverse.Common.Color3 emissiveColor_;
        /// <summary>
        /// default = black;
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Memetaverse.Common.Color3 EmissiveColor {
          get { return emissiveColor_; }
          set {
            emissiveColor_ = value;
          }
        }

        /// <summary>Field number for the "reflectivity_color" field.</summary>
        public const int ReflectivityColorFieldNumber = 9;
        private global::Memetaverse.Common.Color3 reflectivityColor_;
        /// <summary>
        /// default = white;
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::Memetaverse.Common.Color3 ReflectivityColor {
          get { return reflectivityColor_; }
          set {
            reflectivityColor_ = value;
          }
        }

        /// <summary>Field number for the "transparency_mode" field.</summary>
        public const int TransparencyModeFieldNumber = 10;
        private global::DCL.ECSComponents.MaterialTransparencyMode transparencyMode_;
        /// <summary>
        /// default = TransparencyMode.Auto
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public global::DCL.ECSComponents.MaterialTransparencyMode TransparencyMode {
          get { if ((_hasBits0 & 4) != 0) { return transparencyMode_; } else { return global::DCL.ECSComponents.MaterialTransparencyMode.MtmOpaque; } }
          set {
            _hasBits0 |= 4;
            transparencyMode_ = value;
          }
        }
        /// <summary>Gets whether the "transparency_mode" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasTransparencyMode {
          get { return (_hasBits0 & 4) != 0; }
        }
        /// <summary>Clears the value of the "transparency_mode" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearTransparencyMode() {
          _hasBits0 &= ~4;
        }

        /// <summary>Field number for the "metallic" field.</summary>
        public const int MetallicFieldNumber = 11;
        private float metallic_;
        /// <summary>
        /// default = 0.5
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Metallic {
          get { if ((_hasBits0 & 8) != 0) { return metallic_; } else { return 0F; } }
          set {
            _hasBits0 |= 8;
            metallic_ = value;
          }
        }
        /// <summary>Gets whether the "metallic" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasMetallic {
          get { return (_hasBits0 & 8) != 0; }
        }
        /// <summary>Clears the value of the "metallic" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearMetallic() {
          _hasBits0 &= ~8;
        }

        /// <summary>Field number for the "roughness" field.</summary>
        public const int RoughnessFieldNumber = 12;
        private float roughness_;
        /// <summary>
        /// default = 0.5
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float Roughness {
          get { if ((_hasBits0 & 16) != 0) { return roughness_; } else { return 0F; } }
          set {
            _hasBits0 |= 16;
            roughness_ = value;
          }
        }
        /// <summary>Gets whether the "roughness" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasRoughness {
          get { return (_hasBits0 & 16) != 0; }
        }
        /// <summary>Clears the value of the "roughness" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearRoughness() {
          _hasBits0 &= ~16;
        }

        /// <summary>Field number for the "specular_intensity" field.</summary>
        public const int SpecularIntensityFieldNumber = 14;
        private float specularIntensity_;
        /// <summary>
        /// default = 1
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float SpecularIntensity {
          get { if ((_hasBits0 & 32) != 0) { return specularIntensity_; } else { return 0F; } }
          set {
            _hasBits0 |= 32;
            specularIntensity_ = value;
          }
        }
        /// <summary>Gets whether the "specular_intensity" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasSpecularIntensity {
          get { return (_hasBits0 & 32) != 0; }
        }
        /// <summary>Clears the value of the "specular_intensity" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearSpecularIntensity() {
          _hasBits0 &= ~32;
        }

        /// <summary>Field number for the "emissive_intensity" field.</summary>
        public const int EmissiveIntensityFieldNumber = 15;
        private float emissiveIntensity_;
        /// <summary>
        /// default = 2
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float EmissiveIntensity {
          get { if ((_hasBits0 & 64) != 0) { return emissiveIntensity_; } else { return 0F; } }
          set {
            _hasBits0 |= 64;
            emissiveIntensity_ = value;
          }
        }
        /// <summary>Gets whether the "emissive_intensity" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasEmissiveIntensity {
          get { return (_hasBits0 & 64) != 0; }
        }
        /// <summary>Clears the value of the "emissive_intensity" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearEmissiveIntensity() {
          _hasBits0 &= ~64;
        }

        /// <summary>Field number for the "direct_intensity" field.</summary>
        public const int DirectIntensityFieldNumber = 16;
        private float directIntensity_;
        /// <summary>
        /// default = 1
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public float DirectIntensity {
          get { if ((_hasBits0 & 128) != 0) { return directIntensity_; } else { return 0F; } }
          set {
            _hasBits0 |= 128;
            directIntensity_ = value;
          }
        }
        /// <summary>Gets whether the "direct_intensity" field is set</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool HasDirectIntensity {
          get { return (_hasBits0 & 128) != 0; }
        }
        /// <summary>Clears the value of the "direct_intensity" field</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void ClearDirectIntensity() {
          _hasBits0 &= ~128;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override bool Equals(object other) {
          return Equals(other as PbrMaterial);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public bool Equals(PbrMaterial other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (!object.Equals(Texture, other.Texture)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(AlphaTest, other.AlphaTest)) return false;
          if (CastShadows != other.CastShadows) return false;
          if (!object.Equals(AlphaTexture, other.AlphaTexture)) return false;
          if (!object.Equals(EmissiveTexture, other.EmissiveTexture)) return false;
          if (!object.Equals(BumpTexture, other.BumpTexture)) return false;
          if (!object.Equals(AlbedoColor, other.AlbedoColor)) return false;
          if (!object.Equals(EmissiveColor, other.EmissiveColor)) return false;
          if (!object.Equals(ReflectivityColor, other.ReflectivityColor)) return false;
          if (TransparencyMode != other.TransparencyMode) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Metallic, other.Metallic)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Roughness, other.Roughness)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SpecularIntensity, other.SpecularIntensity)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EmissiveIntensity, other.EmissiveIntensity)) return false;
          if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DirectIntensity, other.DirectIntensity)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override int GetHashCode() {
          int hash = 1;
          if (texture_ != null) hash ^= Texture.GetHashCode();
          if (HasAlphaTest) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(AlphaTest);
          if (HasCastShadows) hash ^= CastShadows.GetHashCode();
          if (alphaTexture_ != null) hash ^= AlphaTexture.GetHashCode();
          if (emissiveTexture_ != null) hash ^= EmissiveTexture.GetHashCode();
          if (bumpTexture_ != null) hash ^= BumpTexture.GetHashCode();
          if (albedoColor_ != null) hash ^= AlbedoColor.GetHashCode();
          if (emissiveColor_ != null) hash ^= EmissiveColor.GetHashCode();
          if (reflectivityColor_ != null) hash ^= ReflectivityColor.GetHashCode();
          if (HasTransparencyMode) hash ^= TransparencyMode.GetHashCode();
          if (HasMetallic) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Metallic);
          if (HasRoughness) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Roughness);
          if (HasSpecularIntensity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SpecularIntensity);
          if (HasEmissiveIntensity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EmissiveIntensity);
          if (HasDirectIntensity) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DirectIntensity);
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void WriteTo(pb::CodedOutputStream output) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          output.WriteRawMessage(this);
        #else
          if (texture_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Texture);
          }
          if (HasAlphaTest) {
            output.WriteRawTag(21);
            output.WriteFloat(AlphaTest);
          }
          if (HasCastShadows) {
            output.WriteRawTag(24);
            output.WriteBool(CastShadows);
          }
          if (alphaTexture_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(AlphaTexture);
          }
          if (emissiveTexture_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(EmissiveTexture);
          }
          if (bumpTexture_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(BumpTexture);
          }
          if (albedoColor_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(AlbedoColor);
          }
          if (emissiveColor_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(EmissiveColor);
          }
          if (reflectivityColor_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(ReflectivityColor);
          }
          if (HasTransparencyMode) {
            output.WriteRawTag(80);
            output.WriteEnum((int) TransparencyMode);
          }
          if (HasMetallic) {
            output.WriteRawTag(93);
            output.WriteFloat(Metallic);
          }
          if (HasRoughness) {
            output.WriteRawTag(101);
            output.WriteFloat(Roughness);
          }
          if (HasSpecularIntensity) {
            output.WriteRawTag(117);
            output.WriteFloat(SpecularIntensity);
          }
          if (HasEmissiveIntensity) {
            output.WriteRawTag(125);
            output.WriteFloat(EmissiveIntensity);
          }
          if (HasDirectIntensity) {
            output.WriteRawTag(133, 1);
            output.WriteFloat(DirectIntensity);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
          if (texture_ != null) {
            output.WriteRawTag(10);
            output.WriteMessage(Texture);
          }
          if (HasAlphaTest) {
            output.WriteRawTag(21);
            output.WriteFloat(AlphaTest);
          }
          if (HasCastShadows) {
            output.WriteRawTag(24);
            output.WriteBool(CastShadows);
          }
          if (alphaTexture_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(AlphaTexture);
          }
          if (emissiveTexture_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(EmissiveTexture);
          }
          if (bumpTexture_ != null) {
            output.WriteRawTag(50);
            output.WriteMessage(BumpTexture);
          }
          if (albedoColor_ != null) {
            output.WriteRawTag(58);
            output.WriteMessage(AlbedoColor);
          }
          if (emissiveColor_ != null) {
            output.WriteRawTag(66);
            output.WriteMessage(EmissiveColor);
          }
          if (reflectivityColor_ != null) {
            output.WriteRawTag(74);
            output.WriteMessage(ReflectivityColor);
          }
          if (HasTransparencyMode) {
            output.WriteRawTag(80);
            output.WriteEnum((int) TransparencyMode);
          }
          if (HasMetallic) {
            output.WriteRawTag(93);
            output.WriteFloat(Metallic);
          }
          if (HasRoughness) {
            output.WriteRawTag(101);
            output.WriteFloat(Roughness);
          }
          if (HasSpecularIntensity) {
            output.WriteRawTag(117);
            output.WriteFloat(SpecularIntensity);
          }
          if (HasEmissiveIntensity) {
            output.WriteRawTag(125);
            output.WriteFloat(EmissiveIntensity);
          }
          if (HasDirectIntensity) {
            output.WriteRawTag(133, 1);
            output.WriteFloat(DirectIntensity);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(ref output);
          }
        }
        #endif

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public int CalculateSize() {
          int size = 0;
          if (texture_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Texture);
          }
          if (HasAlphaTest) {
            size += 1 + 4;
          }
          if (HasCastShadows) {
            size += 1 + 1;
          }
          if (alphaTexture_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlphaTexture);
          }
          if (emissiveTexture_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EmissiveTexture);
          }
          if (bumpTexture_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(BumpTexture);
          }
          if (albedoColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(AlbedoColor);
          }
          if (emissiveColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EmissiveColor);
          }
          if (reflectivityColor_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReflectivityColor);
          }
          if (HasTransparencyMode) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TransparencyMode);
          }
          if (HasMetallic) {
            size += 1 + 4;
          }
          if (HasRoughness) {
            size += 1 + 4;
          }
          if (HasSpecularIntensity) {
            size += 1 + 4;
          }
          if (HasEmissiveIntensity) {
            size += 1 + 4;
          }
          if (HasDirectIntensity) {
            size += 2 + 4;
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(PbrMaterial other) {
          if (other == null) {
            return;
          }
          if (other.texture_ != null) {
            if (texture_ == null) {
              Texture = new global::Memetaverse.Common.TextureUnion();
            }
            Texture.MergeFrom(other.Texture);
          }
          if (other.HasAlphaTest) {
            AlphaTest = other.AlphaTest;
          }
          if (other.HasCastShadows) {
            CastShadows = other.CastShadows;
          }
          if (other.alphaTexture_ != null) {
            if (alphaTexture_ == null) {
              AlphaTexture = new global::Memetaverse.Common.TextureUnion();
            }
            AlphaTexture.MergeFrom(other.AlphaTexture);
          }
          if (other.emissiveTexture_ != null) {
            if (emissiveTexture_ == null) {
              EmissiveTexture = new global::Memetaverse.Common.TextureUnion();
            }
            EmissiveTexture.MergeFrom(other.EmissiveTexture);
          }
          if (other.bumpTexture_ != null) {
            if (bumpTexture_ == null) {
              BumpTexture = new global::Memetaverse.Common.TextureUnion();
            }
            BumpTexture.MergeFrom(other.BumpTexture);
          }
          if (other.albedoColor_ != null) {
            if (albedoColor_ == null) {
              AlbedoColor = new global::Memetaverse.Common.Color4();
            }
            AlbedoColor.MergeFrom(other.AlbedoColor);
          }
          if (other.emissiveColor_ != null) {
            if (emissiveColor_ == null) {
              EmissiveColor = new global::Memetaverse.Common.Color3();
            }
            EmissiveColor.MergeFrom(other.EmissiveColor);
          }
          if (other.reflectivityColor_ != null) {
            if (reflectivityColor_ == null) {
              ReflectivityColor = new global::Memetaverse.Common.Color3();
            }
            ReflectivityColor.MergeFrom(other.ReflectivityColor);
          }
          if (other.HasTransparencyMode) {
            TransparencyMode = other.TransparencyMode;
          }
          if (other.HasMetallic) {
            Metallic = other.Metallic;
          }
          if (other.HasRoughness) {
            Roughness = other.Roughness;
          }
          if (other.HasSpecularIntensity) {
            SpecularIntensity = other.SpecularIntensity;
          }
          if (other.HasEmissiveIntensity) {
            EmissiveIntensity = other.EmissiveIntensity;
          }
          if (other.HasDirectIntensity) {
            DirectIntensity = other.DirectIntensity;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        public void MergeFrom(pb::CodedInputStream input) {
        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
          input.ReadRawMessage(this);
        #else
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                if (texture_ == null) {
                  Texture = new global::Memetaverse.Common.TextureUnion();
                }
                input.ReadMessage(Texture);
                break;
              }
              case 21: {
                AlphaTest = input.ReadFloat();
                break;
              }
              case 24: {
                CastShadows = input.ReadBool();
                break;
              }
              case 34: {
                if (alphaTexture_ == null) {
                  AlphaTexture = new global::Memetaverse.Common.TextureUnion();
                }
                input.ReadMessage(AlphaTexture);
                break;
              }
              case 42: {
                if (emissiveTexture_ == null) {
                  EmissiveTexture = new global::Memetaverse.Common.TextureUnion();
                }
                input.ReadMessage(EmissiveTexture);
                break;
              }
              case 50: {
                if (bumpTexture_ == null) {
                  BumpTexture = new global::Memetaverse.Common.TextureUnion();
                }
                input.ReadMessage(BumpTexture);
                break;
              }
              case 58: {
                if (albedoColor_ == null) {
                  AlbedoColor = new global::Memetaverse.Common.Color4();
                }
                input.ReadMessage(AlbedoColor);
                break;
              }
              case 66: {
                if (emissiveColor_ == null) {
                  EmissiveColor = new global::Memetaverse.Common.Color3();
                }
                input.ReadMessage(EmissiveColor);
                break;
              }
              case 74: {
                if (reflectivityColor_ == null) {
                  ReflectivityColor = new global::Memetaverse.Common.Color3();
                }
                input.ReadMessage(ReflectivityColor);
                break;
              }
              case 80: {
                TransparencyMode = (global::DCL.ECSComponents.MaterialTransparencyMode) input.ReadEnum();
                break;
              }
              case 93: {
                Metallic = input.ReadFloat();
                break;
              }
              case 101: {
                Roughness = input.ReadFloat();
                break;
              }
              case 117: {
                SpecularIntensity = input.ReadFloat();
                break;
              }
              case 125: {
                EmissiveIntensity = input.ReadFloat();
                break;
              }
              case 133: {
                DirectIntensity = input.ReadFloat();
                break;
              }
            }
          }
        #endif
        }

        #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
        void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
                break;
              case 10: {
                if (texture_ == null) {
                  Texture = new global::Memetaverse.Common.TextureUnion();
                }
                input.ReadMessage(Texture);
                break;
              }
              case 21: {
                AlphaTest = input.ReadFloat();
                break;
              }
              case 24: {
                CastShadows = input.ReadBool();
                break;
              }
              case 34: {
                if (alphaTexture_ == null) {
                  AlphaTexture = new global::Memetaverse.Common.TextureUnion();
                }
                input.ReadMessage(AlphaTexture);
                break;
              }
              case 42: {
                if (emissiveTexture_ == null) {
                  EmissiveTexture = new global::Memetaverse.Common.TextureUnion();
                }
                input.ReadMessage(EmissiveTexture);
                break;
              }
              case 50: {
                if (bumpTexture_ == null) {
                  BumpTexture = new global::Memetaverse.Common.TextureUnion();
                }
                input.ReadMessage(BumpTexture);
                break;
              }
              case 58: {
                if (albedoColor_ == null) {
                  AlbedoColor = new global::Memetaverse.Common.Color4();
                }
                input.ReadMessage(AlbedoColor);
                break;
              }
              case 66: {
                if (emissiveColor_ == null) {
                  EmissiveColor = new global::Memetaverse.Common.Color3();
                }
                input.ReadMessage(EmissiveColor);
                break;
              }
              case 74: {
                if (reflectivityColor_ == null) {
                  ReflectivityColor = new global::Memetaverse.Common.Color3();
                }
                input.ReadMessage(ReflectivityColor);
                break;
              }
              case 80: {
                TransparencyMode = (global::DCL.ECSComponents.MaterialTransparencyMode) input.ReadEnum();
                break;
              }
              case 93: {
                Metallic = input.ReadFloat();
                break;
              }
              case 101: {
                Roughness = input.ReadFloat();
                break;
              }
              case 117: {
                SpecularIntensity = input.ReadFloat();
                break;
              }
              case 125: {
                EmissiveIntensity = input.ReadFloat();
                break;
              }
              case 133: {
                DirectIntensity = input.ReadFloat();
                break;
              }
            }
          }
        }
        #endif

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
